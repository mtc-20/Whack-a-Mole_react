{"version":3,"sources":["Components/Square.js","redux/actions.js","redux/actionTypes.js","Components/GameBoard.js","redux/reducer.js","redux/store.js","App.js","assets/mole.png","assets/ground.png"],"names":["styles","StyleSheet","create","square","flex","minWidth","minHeight","margin","borderRadius","overflow","width","height","resizeMode","mole","connect","state","score","timeLimit","dispatch","addScore","type","props","timerID","useState","moleActive","setMoleActive","setGameOver","randomTime","Math","random","endGame","clearInterval","useEffect","setInterval","setTimeout","TouchableOpacity","onPress","Image","source","require","style","container","backgroundColor","alignItems","game","flexDirection","flexWrap","paddingTop","header","fontWeight","fontSize","justifyContent","marginTop","marginLeft","textAlign","content","fontStyle","timeLeft","setTimeLeft","View","Text","initialState","scoreReducer","action","store","createStore","App","module","exports"],"mappings":"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","file":"static/js/app.8f9d6248.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { StyleSheet, TouchableOpacity, Image } from 'react-native'\r\nimport { connect } from 'react-redux'\r\nimport { addScore } from './../redux'\r\n\r\n\r\nconst Square = (props) => {\r\n    const [moleActive, setMoleActive] = useState(false)\r\n    const [isGameOver, setGameOver] = useState(false)\r\n    \r\n    const randomTime = Math.random() * 20000\r\n    let timerID\r\n    useEffect(() => {\r\n        timerID = setInterval(() => {\r\n            setMoleActive(true)\r\n            setTimeout(() => {setMoleActive(false)}, 800)\r\n        }, randomTime)\r\n        setTimeout(endGame, props.timeLimit*1000)\r\n    }, [])\r\n\r\n    function endGame() {\r\n        clearInterval(timerID)\r\n        setGameOver(true)\r\n    }\r\n\r\n    return (\r\n        <TouchableOpacity onPress={moleActive? props.addScore : null}>\r\n           <Image source={moleActive? require('./../assets/mole.png') : require('./../assets/ground.png')} style={moleActive? styles.mole : styles.square} ></Image>\r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    square: {\r\n        flex: 1,\r\n        minWidth: 80,\r\n        minHeight: 80,\r\n        margin: 10,\r\n        // backgroundColor: 'white',\r\n        borderRadius: 40,\r\n        overflow: 'hidden',\r\n        width: '75%',\r\n        height: '75%',\r\n        resizeMode: 'contain'\r\n    },\r\n    mole: {\r\n        flex: 1,\r\n        minWidth: 80,\r\n        minHeight: 80,\r\n        margin: 10,\r\n        // backgroundColor: 'transparent',\r\n        width: '75%',\r\n        height: '75%',\r\n        resizeMode: 'contain'\r\n        \r\n    },\r\n})\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        score: state.score, \r\n        timeLimit: state.timeLimit\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addScore: () => dispatch(addScore())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Square)","import {ADD_SCORE} from './actionTypes'\r\n\r\n\r\nexport const addScore = () => {\r\n    return {\r\n        type: ADD_SCORE\r\n    }\r\n}","export  const ADD_SCORE = 'ADD_SCORE'","import React, { useEffect, useState } from  'react'\r\nimport  { StyleSheet, Text, View } from 'react-native'\r\nimport Square from './Square.js'\r\nimport { connect} from 'react-redux'\r\n\r\n\r\nconst GameBoard = (props) => {\r\n    // let props.timeLimit = 11;\r\n    const [timeLeft, setTimeLeft] = useState(props.timeLimit)\r\n\r\n    useEffect(() => {\r\n        if(!timeLeft) return\r\n        const timerID = setInterval(() => {\r\n            // Happens every 1000ms\r\n            setTimeLeft(timeLeft-1)\r\n        }, 1000)\r\n        return () => clearInterval(timerID)\r\n    }, [timeLeft])\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n      <Text style={styles.header}>Mtc's Whack-a-mole App !</Text>\r\n      <Text style={styles.content}>{timeLeft} s left</Text>\r\n      <Text style={styles.content}>{props.score} Moles whacked !</Text>\r\n      {/* <StatusBar style=\"auto\" /> */}\r\n\r\n      <View style={styles.game}>\r\n        <Square ></Square>\r\n        <Square ></Square>\r\n        <Square ></Square>\r\n        <Square ></Square>\r\n        <Square ></Square>\r\n        <Square ></Square>\r\n        <Square ></Square>\r\n        <Square ></Square>\r\n        <Square ></Square>\r\n        <Square ></Square>\r\n        <Square ></Square>\r\n        <Square ></Square>\r\n      </View>\r\n    </View>\r\n    )\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#87ceeb',\r\n      alignItems: 'center',\r\n    //   marginTop: 100\r\n    //   justifyContent: 'center',\r\n    },\r\n    game: {\r\n      // flex: 1,\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n      width: 300,\r\n      paddingTop: 20,\r\n    },\r\n    header: {\r\n        fontWeight: 'bold',\r\n        fontSize: 32,\r\n        justifyContent: 'center',\r\n        marginTop: 30,\r\n        marginLeft: 50,\r\n        textAlign: 'center'\r\n    },\r\n    content: {\r\n        fontSize: 20,\r\n        fontStyle: 'italic'\r\n    }\r\n  });\r\n\r\n  const mapStateToProps = state => {\r\n      return {\r\n          score: state.score,\r\n          timeLimit: state.timeLimit\r\n      }\r\n  }\r\n  \r\n\r\nexport default connect(mapStateToProps)(GameBoard) ","import {ADD_SCORE} from './actionTypes'\r\n\r\nconst initialState = {\r\n    score: 0,\r\n    timeLimit: 60\r\n}\r\n\r\nconst scoreReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_SCORE: return {\r\n            ...state,\r\n            score: state.score + 1\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default scoreReducer","import {createStore} from 'redux'\r\nimport scoreReducer from './reducer'\r\n\r\nconst store = createStore(scoreReducer)\r\n\r\nexport default store","import React from 'react';\nimport GameBoard from './Components/GameBoard'\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <GameBoard/>\n    </Provider>\n    \n  );\n}\n\n","module.exports = __webpack_public_path__ + \"static/media/mole.35b51632.png\";","module.exports = __webpack_public_path__ + \"static/media/ground.d610c091.png\";"],"sourceRoot":""}